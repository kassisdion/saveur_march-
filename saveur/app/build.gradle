apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27

        applicationId "com.saveurmarche.saveurmarche"
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true

        vectorDrawables.useSupportLibrary = true
        resConfigs "en", "fr"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "CLIENT_ID", "\"" + CLIENT_ID + "\""
        buildConfigField "String", "CLIENT_SECRET", "\"" + CLIENT_SECRET + "\""
        buildConfigField "String", "BASE_URL", "\"" + BASE_URL + "\""
        buildConfigField "String", "GRANT_TYPE_CREDENTIALS", "\"" + GRANT_TYPE_CREDENTIALS + "\""
        buildConfigField "String", "SCOPE_USER", "\"" + SCOPE_USER + "\""
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "12g"
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
            versionNameSuffix "-SNAPSHOT"

            buildConfigField "Boolean", "LOG", 'true'
        }

        release {
            shrinkResources true
            minifyEnabled true
            useProguard true
            testCoverageEnabled false
            debuggable false

            buildConfigField "Boolean", "LOG", 'false'

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')// Android default proguard files
            proguardFiles file('proguard-rules.pro')// SaveurMarche proguard files
            proguardFiles fileTree(dir: 'proguards', include: ['*.pro']).asList().toArray()//Library specific proguard
        }
    }

    flavorDimensions("environement")
    productFlavors {
        dev {
            applicationIdSuffix = ".dev"
            dimension "environement"
        }
    }

    // Remove devRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.flavors[0].name == 'dev') {
            variant.ignore = true
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // App's dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.ext.kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$rootProject.ext.kotlinVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.karumi:dexter:$rootProject.ext.dexterVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.35'
    implementation "com.android.support:multidex:1.0.3"

    //Image loading
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glide_version"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glide_version"

    //Maps
    implementation "com.google.android.gms:play-services-maps:$rootProject.ext.gmsVersion"
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    //RX
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"
    implementation 'com.akaita.java:rxjava2-debug:1.2.2'

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttp_version"

    //Json parser
    implementation "com.squareup.moshi:moshi:$rootProject.ext.moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$rootProject.ext.moshi_version"

    //Dagger (DI)
    implementation "com.google.dagger:dagger:${dagger_version}"
    implementation "com.google.dagger:dagger-android:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.runnerVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoVersion"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:$rootProject.ext.espressoVersion"
}